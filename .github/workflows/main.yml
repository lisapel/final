name: test-build-push-deploy
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  pull_request:
    types:
      - created
  push:
    branches: 
      - implementation
      - main
      - feature/*

jobs:
  
  create_pull_request:
   runs-on: ubuntu-latest
   permissions:
      contents: write
      pull-requests: write
      
   steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create feature branch
      run: |
        git checkout -b feature-${{ github.run_number }}
        git push origin feature-${{ github.run_number }}
      
    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Update report
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        signoff: false
        branch: feature-${{ github.run_number }}
        delete-branch: true
        title: '[Example] Update report'
        body: |
          Update report
          - Updated with *today's* date
          - Auto-generated by [create-pull-request][1]

          [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            report
            automated pr
          assignees: peter-evans
          reviewers: peter-evans
          team-reviewers: |
            developers
            qa-team
          milestone: 1
          draft: false
 
  unit_tests:
    
    runs-on: ubuntu-latest
    needs: create_pull_request
  
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: temurin

    - name: Build with Gradle
      run: chmod +x ./gradlew

    - name: Run UnitTests
      run: ./gradlew test --tests "groupassignment.controller.UnitTests"

  all_tests:
    runs-on: ubuntu-latest
    needs: unit_tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: temurin  

    - name: Build with Gradle
      run: chmod +x ./gradlew  
      
    - name: Run all tests
      run: ./gradlew test
      
  publish_github_package:
    needs: [unit_tests, all_tests]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: temurin  

    - name: Build with Gradle
      run: chmod +x ./gradlew 
      
    - name: Build with gradle 8.3
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25
      with:
        arguments: build

    - name: Publish to GitHub Packages
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: publish
      env:
        USERNAME: ${{ github.actor }}
        TOKEN: ${{ secrets.TOKEN }}

    - name: Log in to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push From DockerFile
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository }}:${{github.ref_name}}
        
  deploy:
    runs-on: ubuntu-latest
    needs: [unit_tests,all_tests,publish_github_package]
    
    steps:
    - name: deploy
      run: echo $IMAGE_NAME

  
  
