/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'maven-publish'
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
jacocoTestReport {
    reports {
        xml.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        html.required = true
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-web")
    compileOnly("org.projectlombok:lombok")
    runtimeOnly("com.mysql:mysql-connector-j")
    testImplementation("org.springframework.boot:spring-boot-starter-test")


}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'groupassignment.App'
}


test {
    task unitTest(type: Test) {
        useJUnitPlatform {
            includeTags 'UnitTest'
            excludeTags 'IntegrationTest', 'SmokeTest'
            testLogging {
                events "PASSED", "FAILED", "SKIPPED"
            }
            finalizedBy jacocoTestReport
        }

        task smokeTest(type: Test) {
            useJUnitPlatform {
                includeTags 'SmokeTest'
                excludeTags 'UnitTest', 'IntegrationTest'
            }
            testLogging {
                events "PASSED", "FAILED", "SKIPPED"
            }
            finalizedBy jacocoTestReport
        }
        task integrationTest(type: Test) {
            useJUnitPlatform {
                includeTags 'IntegrationTest'
                excludeTags 'UnitTest', 'SmokeTest'
            }
            testLogging {
                events "PASSED", "FAILED", "SKIPPED"
            }
            finalizedBy jacocoTestReport
        }



    }}